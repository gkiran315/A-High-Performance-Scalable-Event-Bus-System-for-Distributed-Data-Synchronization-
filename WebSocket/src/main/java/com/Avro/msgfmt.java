/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.Avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class msgfmt extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"msgfmt\",\"namespace\":\"com.Avro\",\"fields\":[{\"name\":\"Topic\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"avro.java.stringImpl\":\"String\"}},{\"name\":\"Type\",\"type\":[\"int\"]},{\"name\":\"Message\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"Time\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String Topic;
  @Deprecated public java.lang.Object Type;
  @Deprecated public java.lang.Object Message;
  @Deprecated public java.lang.Object Time;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public msgfmt() {}

  /**
   * All-args constructor.
   */
  public msgfmt(java.lang.String Topic, java.lang.Object Type, java.lang.Object Message, java.lang.Object Time) {
    this.Topic = Topic;
    this.Type = Type;
    this.Message = Message;
    this.Time = Time;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return Topic;
    case 1: return Type;
    case 2: return Message;
    case 3: return Time;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: Topic = (java.lang.String)value$; break;
    case 1: Type = (java.lang.Object)value$; break;
    case 2: Message = (java.lang.Object)value$; break;
    case 3: Time = (java.lang.Object)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'Topic' field.
   */
  public java.lang.String getTopic() {
    return Topic;
  }

  /**
   * Sets the value of the 'Topic' field.
   * @param value the value to set.
   */
  public void setTopic(java.lang.String value) {
    this.Topic = value;
  }

  /**
   * Gets the value of the 'Type' field.
   */
  public java.lang.Object getType() {
    return Type;
  }

  /**
   * Sets the value of the 'Type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.Object value) {
    this.Type = value;
  }

  /**
   * Gets the value of the 'Message' field.
   */
  public java.lang.Object getMessage() {
    return Message;
  }

  /**
   * Sets the value of the 'Message' field.
   * @param value the value to set.
   */
  public void setMessage(java.lang.Object value) {
    this.Message = value;
  }

  /**
   * Gets the value of the 'Time' field.
   */
  public java.lang.Object getTime() {
    return Time;
  }

  /**
   * Sets the value of the 'Time' field.
   * @param value the value to set.
   */
  public void setTime(java.lang.Object value) {
    this.Time = value;
  }

  /** Creates a new msgfmt RecordBuilder */
  public static com.Avro.msgfmt.Builder newBuilder() {
    return new com.Avro.msgfmt.Builder();
  }
  
  /** Creates a new msgfmt RecordBuilder by copying an existing Builder */
  public static com.Avro.msgfmt.Builder newBuilder(com.Avro.msgfmt.Builder other) {
    return new com.Avro.msgfmt.Builder(other);
  }
  
  /** Creates a new msgfmt RecordBuilder by copying an existing msgfmt instance */
  public static com.Avro.msgfmt.Builder newBuilder(com.Avro.msgfmt other) {
    return new com.Avro.msgfmt.Builder(other);
  }
  
  /**
   * RecordBuilder for msgfmt instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<msgfmt>
    implements org.apache.avro.data.RecordBuilder<msgfmt> {

    private java.lang.String Topic;
    private java.lang.Object Type;
    private java.lang.Object Message;
    private java.lang.Object Time;

    /** Creates a new Builder */
    private Builder() {
      super(com.Avro.msgfmt.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.Avro.msgfmt.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.Topic)) {
        this.Topic = data().deepCopy(fields()[0].schema(), other.Topic);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Type)) {
        this.Type = data().deepCopy(fields()[1].schema(), other.Type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.Message)) {
        this.Message = data().deepCopy(fields()[2].schema(), other.Message);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Time)) {
        this.Time = data().deepCopy(fields()[3].schema(), other.Time);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing msgfmt instance */
    private Builder(com.Avro.msgfmt other) {
            super(com.Avro.msgfmt.SCHEMA$);
      if (isValidValue(fields()[0], other.Topic)) {
        this.Topic = data().deepCopy(fields()[0].schema(), other.Topic);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Type)) {
        this.Type = data().deepCopy(fields()[1].schema(), other.Type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.Message)) {
        this.Message = data().deepCopy(fields()[2].schema(), other.Message);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Time)) {
        this.Time = data().deepCopy(fields()[3].schema(), other.Time);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'Topic' field */
    public java.lang.String getTopic() {
      return Topic;
    }
    
    /** Sets the value of the 'Topic' field */
    public com.Avro.msgfmt.Builder setTopic(java.lang.String value) {
      validate(fields()[0], value);
      this.Topic = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'Topic' field has been set */
    public boolean hasTopic() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'Topic' field */
    public com.Avro.msgfmt.Builder clearTopic() {
      Topic = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'Type' field */
    public java.lang.Object getType() {
      return Type;
    }
    
    /** Sets the value of the 'Type' field */
    public com.Avro.msgfmt.Builder setType(java.lang.Object value) {
      validate(fields()[1], value);
      this.Type = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'Type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'Type' field */
    public com.Avro.msgfmt.Builder clearType() {
      Type = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'Message' field */
    public java.lang.Object getMessage() {
      return Message;
    }
    
    /** Sets the value of the 'Message' field */
    public com.Avro.msgfmt.Builder setMessage(java.lang.Object value) {
      validate(fields()[2], value);
      this.Message = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'Message' field has been set */
    public boolean hasMessage() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'Message' field */
    public com.Avro.msgfmt.Builder clearMessage() {
      Message = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'Time' field */
    public java.lang.Object getTime() {
      return Time;
    }
    
    /** Sets the value of the 'Time' field */
    public com.Avro.msgfmt.Builder setTime(java.lang.Object value) {
      validate(fields()[3], value);
      this.Time = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'Time' field has been set */
    public boolean hasTime() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'Time' field */
    public com.Avro.msgfmt.Builder clearTime() {
      Time = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public msgfmt build() {
      try {
        msgfmt record = new msgfmt();
        record.Topic = fieldSetFlags()[0] ? this.Topic : (java.lang.String) defaultValue(fields()[0]);
        record.Type = fieldSetFlags()[1] ? this.Type : (java.lang.Object) defaultValue(fields()[1]);
        record.Message = fieldSetFlags()[2] ? this.Message : (java.lang.Object) defaultValue(fields()[2]);
        record.Time = fieldSetFlags()[3] ? this.Time : (java.lang.Object) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
